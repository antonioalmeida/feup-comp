/* Generated By:JJTree: Do not edit this line. ASTCall.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */

import java.io.*;

public
class ASTCall extends SimpleNode {
  protected String type = null;

  public ASTCall(int id) {
    super(id);
  }

  public ASTCall(Yal p, int id) {
    super(p, id);
  }


  public void set_type(String type){
  	this.type = type;
  }

  public String toString(String prefix) {
  	String node = prefix + toString();


    if (this.type != null){
    	node += " [" + this.value + "." + this.type + "]";

      PrintWriter out = null;
      FileReader reader = null;
      BufferedReader br = null;
      
      try{
        out = new PrintWriter(new BufferedWriter(new FileWriter("output.temp")));
        reader = new FileReader("output.j");
        br = new BufferedReader(reader);
        String line;

        while ((line = br.readLine()) != null) {

          if (line.contains("return")) {
            out.println("invokestatic " + this.value + "/"  + this.type + "(Ljava/lang/String;)V");
            out.println("");
          }
          out.println(line);
        }

        out.close();
        reader.close();
      } catch (Exception e) {

      }


      File realName = new File("output.j");
      realName.delete();
      new File("output.temp").renameTo(realName);

    } else node += " [" + this.value + "]";


  	return node;
  }

}
/* JavaCC - OriginalChecksum=55d810e8e5bdaec6dc4563eb620a4c34 (do not edit this line) */
