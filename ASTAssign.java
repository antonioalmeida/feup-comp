/* Generated By:JJTree: Do not edit this line. ASTAssign.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTAssign extends SimpleNode {
    public ASTAssign(int id) {
        super(id);
    }

    public ASTAssign(Yal p, int id) {
        super(p, id);
    }

    /*public boolean analyse() {
        System.out.println("Analysing " + toString(""));
        symbolTable = getAssignedSymbolTable();

        return analyseSymbolTable();
    }*/

    public boolean analyseSymbolTable() {
        if(children == null)
            return false;

        // lhs
        SimpleNode lhsChild = (SimpleNode) children[0];
        
        if(lhsChild.getSizeArray() == true) {
        	System.out.println("Semantic Error: Can't assign the size of array "+lhsChild.value);
        	return false;
        }
      
        Symbol.Type lhsType = lhsChild.getReturnType();
        

        // rhs
        SimpleNode rhsChild = (SimpleNode) children[1];
        
        Symbol.Type rhsType = rhsChild.getReturnType();

        
        String lhsSymbol = (String) lhsChild.jjtGetValue();
        
        String rhsSymbol = (String) rhsChild.jjtGetValue();
        
        if(rhsType.equals(Symbol.Type.ARRAY)) {
        	if(! initializeSymbol(lhsSymbol, Symbol.Type.ARRAY, true)) {
        		System.out.println("Semantic Error: "+lhsSymbol+ " has been declared as a scalar and now it has tried to be assigned to an array");
        		return false;
        	}
        	else
        		return true;
        }
        else if(lhsChild.toString().equals("ArrayAccess"))
        	return true;
        else {
        	Symbol.Type type = Symbol.Type.SCALAR;
        	if(lhsType.equals(Symbol.Type.ARRAY))
        		type = Symbol.Type.ARRAY;
        	initializeSymbol(lhsSymbol, type, true);
        }

        return true;
    }

      public Symbol.Type getReturnType() {
        return Symbol.Type.VOID;  
    }



}
/* JavaCC - OriginalChecksum=8a81cbd863c4645c551a38479e4343a7 (do not edit this line) */
